### 二叉树应用

- 后缀表达式转换成二叉表达式树



| 树                      | 描述                                                         |
| ----------------------- | ------------------------------------------------------------ |
| 二叉查找树              | logN，容易造成左右子树的不平衡                               |
| 平衡二叉查找树（AVL树） | 解决上述问题，规定左右子树高度最多差1                        |
| 伸展树（Splay Tree）    | 1.刚刚被访问过的元素，极有可能在不久之后再次被访问到 <br />2.将被访问的下一元素极有可能就处于不久之前被访问过的某个元素的附近 |
| B+树                    | 方便磁盘检索                                                 |
| 红黑树                  | 实现平衡二叉树的另一种方式                                   |

### 二叉查找树（lchild<parent<rchild）



### AVL（左右子树高度最多差1）

- 是二叉查找树

- 插入和删除：单旋转和双旋转保证符合性质

### 红黑树（没有一条路径比其他路径长出2倍）

#### 1. 性质：

- 是二叉查找树

- 红黑树的条件：
  - 结点或是红色，或是黑色
  - 根结点和叶节点都是黑色
  - 如果一个结点是红色，则它的两个子结点都是黑色
  - 结点到它所有后代叶节点的路径中，黑色结点的数目相同

#### 2. 操作

- search、min、max、插入、删除均花费O(logN)

- 插入步骤：
  - 类似于普通二叉查找树寻找位置
  - 插入的结点设置为红色
  - 刷新树，使其符合红黑树性质
- 删除
  - 类似于普通二叉查找树寻找位置
  - 删除
  - 刷新树，使其符合红黑树性质

