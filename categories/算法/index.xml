<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>算法 on Vczyh's Blog</title><link>https://blog-github.zhangeek.com/categories/%E7%AE%97%E6%B3%95/</link><description>Recent content in 算法 on Vczyh's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Tue, 28 Dec 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://blog-github.zhangeek.com/categories/%E7%AE%97%E6%B3%95/index.xml" rel="self" type="application/rss+xml"/><item><title>位运算及应用</title><link>https://blog-github.zhangeek.com/posts/bit-operation/</link><pubDate>Tue, 28 Dec 2021 00:00:00 +0000</pubDate><guid>https://blog-github.zhangeek.com/posts/bit-operation/</guid><description>Go支持的位运算 位运算符 示例 说明 |（按位或） a | b 对应位有一个是1则返回1，否则返回0 &amp;amp;（按位与） a &amp;amp; b 对应位都是1则返回1，否则返回0 ^（按位异或） a ^ b 对应位不相同则返回1，否则返回0 &amp;amp;^（Bit clear） a &amp;amp;^ b 结果假设为a，然后a中为1的位和对应b的位都为1，则将a此位置0 &amp;lt;&amp;lt;（左移） a &amp;lt;&amp;lt; n 乘以2^n，将a左移n位，高位丢弃，低位补0 &amp;gt;&amp;gt;（右移） a &amp;gt;&amp;gt; n 除以2^n，将a右移n位，低位丢弃，但高位不是简单的补0（需要注意符号） var tables = []struct { p1 int p2 int symbol string }{ {4, 5, &amp;#34;|&amp;#34;}, {4, 5, &amp;#34;&amp;amp;&amp;#34;}, {4, 5, &amp;#34;^&amp;#34;}, {6, 11, &amp;#34;&amp;amp;^&amp;#34;}, {4, 2, &amp;#34;&amp;lt;&amp;lt;&amp;#34;}, {4, 1, &amp;#34;&amp;gt;&amp;gt;&amp;#34;}, } for _, t := range tables { var result int switch t.</description></item></channel></rss>