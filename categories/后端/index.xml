<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>后端 on vczyh</title><link>http://blog-github.zhangeek.com/categories/%E5%90%8E%E7%AB%AF/</link><description>Recent content in 后端 on vczyh</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Sun, 26 Jul 2020 11:20:24 +0800</lastBuildDate><atom:link href="http://blog-github.zhangeek.com/categories/%E5%90%8E%E7%AB%AF/index.xml" rel="self" type="application/rss+xml"/><item><title>Go Channel</title><link>http://blog-github.zhangeek.com/post/go-channel/</link><pubDate>Sun, 26 Jul 2020 11:20:24 +0800</pubDate><guid>http://blog-github.zhangeek.com/post/go-channel/</guid><description>无缓冲通道 1 2 3 4 5 6 7 8 9 10 11 12 func main() { c := make(chan int) go func() { time.Sleep(3 * time.Second) fmt.Println(&amp;#34;receive&amp;#34;) fmt.Println(&amp;lt;-c) }() c &amp;lt;- 1 fmt.Println(&amp;#34;send&amp;#34;) } 执行结果。 receive 1 send 对于无缓冲通道，必须得send goroutine</description></item><item><title>Java SPI</title><link>http://blog-github.zhangeek.com/post/java-spi/</link><pubDate>Thu, 26 Mar 2020 11:20:24 +0800</pubDate><guid>http://blog-github.zhangeek.com/post/java-spi/</guid><description>SPI 简介 SPI 全称为 Service Provider Interface，是一种服务发现机制。SPI的本质是将接口实现类（可以是一个或多个）配置在文件中，然后服务读取配置文件，</description></item></channel></rss>